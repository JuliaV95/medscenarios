{"version":3,"file":"js/21.943c543e.js","mappings":"mKAAA,IAAIA,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,cAAc,CAACE,MAAM,CAAC,WAAa,qBAAqBC,GAAG,CAAC,oBAAoBL,EAAIM,2BAA2BC,YAAYP,EAAIQ,GAAG,CAAC,CAACC,IAAI,eAAeC,GAAG,WAAW,MAAO,CAACV,EAAIW,GAAIX,EAAIY,SAAS,SAASC,EAAOC,GAAO,MAAO,CAACZ,EAAG,MAAM,CAACO,IAAIK,EAAMC,YAAY,aAAaC,MAAM,CAAChB,EAAIiB,eAAiBH,GAAS,sBAAsBT,GAAG,CAAC,MAAQ,SAASa,GAAQ,OAAOlB,EAAImB,aAAaN,EAAOO,QAASN,EAAO,IAAG,CAACZ,EAAG,OAAO,CAACF,EAAIqB,GAAGrB,EAAIsB,GAAGT,EAAOU,WAAY,IAAG,EAACC,OAAM,MACphB,EACGC,EAAkB,G,UCkBtB,GACAC,KAAAA,qBACAC,OAAAA,CAAAA,EAAAA,GACAC,WAAAA,CAAAA,EACAC,OACA,OACAC,eAAAA,EACAb,aAAAA,KAEA,EACAc,SAAAA,CACAnB,UACA,qDACA,GAEAoB,QAAAA,CACAb,aAAAA,EAAAA,GACA,oBACA,GACA,4BACAc,iBAAAA,iBACAC,YAAAA,EACAC,UAAAA,EACAC,QAAAA,MAEA,sBACA,6BACA,4BACAH,iBAAAA,oBACAC,YAAAA,EACAC,UAAAA,GAEA,EACA7B,4BACA,2EACA2B,iBAAAA,4BACAC,YAAAA,EACAC,UAAAA,GAEA,IC3DoR,I,UCQhRE,GAAY,OACd,EACAtC,EACA0B,GACA,EACA,KACA,WACA,MAIF,EAAeY,EAAiB,O,uBCnBhC,QACIT,WAAY,CACRU,YAAa,IAAM,6BACnBC,WAAY,IAAM,8BAEtBP,QAAS,CACLQ,uBACIvC,KAAKwC,OAAOC,SAAS,kBACxB,EACDC,uBAAsB,iBAACV,EAAD,WAAmBC,EAAnB,SAA+BC,EAA/B,QAAyCC,IAC3DQ,YAAW,KACP3C,KAAKwC,OAAOC,SAAS,qCAAsC,CACvDT,mBACAC,aACAC,WACAC,WAJJ,GAQP,G","sources":["webpack://medscenarios/./src/components/Steps/FourthScenarioStep/FourthScenarioStep.vue","webpack://medscenarios/src/components/Steps/FourthScenarioStep/FourthScenarioStep.vue","webpack://medscenarios/./src/components/Steps/FourthScenarioStep/FourthScenarioStep.vue?3984","webpack://medscenarios/./src/components/Steps/FourthScenarioStep/FourthScenarioStep.vue?a482","webpack://medscenarios/./src/components/Steps/step_mixin.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('DynamicCard',{attrs:{\"buttonText\":\"Поставить диагноз\"},on:{\"card-button-click\":_vm.processProceedButtonClick},scopedSlots:_vm._u([{key:\"answer-boxes\",fn:function(){return [_vm._l((_vm.answers),function(answer,index){return [_c('div',{key:index,staticClass:\"answer-box\",class:[_vm.chosenAnswer === index && 'answer-box--active'],on:{\"click\":function($event){return _vm.displayAlert(answer.correct, index)}}},[_c('span',[_vm._v(_vm._s(answer.text))])])]})]},proxy:true}])})\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <DynamicCard buttonText=\"Поставить диагноз\"\n                 @card-button-click=\"processProceedButtonClick\">\n        <template #answer-boxes>\n            <template v-for=\"(answer, index) in answers\">\n                <div :class=\"[chosenAnswer === index && 'answer-box--active']\"\n                     @click=\"displayAlert(answer.correct, index)\"\n                     :key=\"index\"\n                     class=\"answer-box\"\n                >\n                    <span>{{answer.text}}</span>\n                </div>\n            </template>\n        </template>\n    </DynamicCard>\n</template>\n\n<script>\n    import step_mixin from \"@/components/Steps/step_mixin\";\n\n    export default {\n        name: 'FourthScenarioStep',\n        mixins: [step_mixin],\n        components: {},\n        data() {\n            return {\n                answerMatched: false,\n                chosenAnswer: null,\n            }\n        },\n        computed: {\n            answers() {\n                return this.activeScenario[this.currentStep]?.answers\n            },\n        },\n        methods: {\n            displayAlert(isCorrect, index) {\n                this.chosenAnswer = index;\n                if (isCorrect) {\n                    this.showAlertNotification({\n                        notificationText: 'Диагноз верный',\n                        greenStyle: true,\n                        redStyle: false,\n                        timeout: 3000,\n                    });\n                    this.answerMatched = true;\n                    this.proceedToTheNextStep()\n                } else this.showAlertNotification({\n                    notificationText: 'Диагноз неверный!',\n                    greenStyle: false,\n                    redStyle: true\n                })\n            },\n            processProceedButtonClick() {\n                this.answerMatched ? this.proceedToTheNextStep() : this.showAlertNotification({\n                    notificationText: 'Поставьте верный диагноз!',\n                    greenStyle: false,\n                    redStyle: true\n                });\n            }\n        }\n    }\n</script>\n\n<style scoped lang=\"scss\">\n    .card-btn {\n        color: white;\n        background-color: #0F3B62;\n    }\n</style>","import mod from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./FourthScenarioStep.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./FourthScenarioStep.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./FourthScenarioStep.vue?vue&type=template&id=3ec6af9f&scoped=true&\"\nimport script from \"./FourthScenarioStep.vue?vue&type=script&lang=js&\"\nexport * from \"./FourthScenarioStep.vue?vue&type=script&lang=js&\"\nimport style0 from \"./FourthScenarioStep.vue?vue&type=style&index=0&id=3ec6af9f&prod&scoped=true&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"3ec6af9f\",\n  null\n  \n)\n\nexport default component.exports","export default {\n    components: {\n        DynamicCard: () => import('@/components/shared-components/DynamicCard'),\n        CardButton: () => import('@/components/shared-components/CardButton'),\n    },\n    methods: {\n        proceedToTheNextStep() {\n            this.$store.dispatch('moveCurrentStep');\n        },\n        showAlertNotification({notificationText, greenStyle, redStyle, timeout}) {\n            setTimeout(() => {\n                this.$store.dispatch('alert/updateNotificationAlertState', {\n                    notificationText,\n                    greenStyle,\n                    redStyle,\n                    timeout\n                })\n            })\n\n        }\n    }\n}"],"names":["render","_vm","this","_c","_self","attrs","on","processProceedButtonClick","scopedSlots","_u","key","fn","_l","answers","answer","index","staticClass","class","chosenAnswer","$event","displayAlert","correct","_v","_s","text","proxy","staticRenderFns","name","mixins","components","data","answerMatched","computed","methods","notificationText","greenStyle","redStyle","timeout","component","DynamicCard","CardButton","proceedToTheNextStep","$store","dispatch","showAlertNotification","setTimeout"],"sourceRoot":""}